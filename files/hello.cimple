int x;
bool y;
int func1(){
    return 5;
}
int func2(int q){
    return q;
}
bool func3(){
    return false;
}
bool func4(int x, int y, bool z){
    return x > y || z;
}
void func5() {
    int a;
    bool b;
    // Arithmatic
    x = 0;
    a = x;
    a = func1();
    x = a + 2;
    x = 4 + 4;
    a = x - 1;
    a = 3 - 3;
    x = 2 * a;
    x = 3 * 3;
    a = 4 / x;
    a = 5 / 5;
    a++;
    x--;
    x = 2 + a * 4 / 2 - 2 * x / a - 2;
    cout << "start of func 5";
    cout << x;
    cout << "\n";
    a = 1;
    a = 2 + a - func1() * func2(x - a) / 4;
    cout << a;
    cout << "\n";
    // Logic
    y = false;
    b = y;
    y = func3();
    y = b && true;
    b = false || y;
    y = !b;
    b = !y || true && b || !false;
    cout << b;
    cout << "\n";
    y = !true || b && !func3();
    cout << y;
    cout << "\n";
    // Equality
    y = 1 > 0;
    y = 1 < a;
    y = 1 >= func1();
    b = a <= x;
    b = a == func1();
    b = func1() != func2(1 + 2);
    cout << b;
    cout << "\n";
    y = true == b;
    y = b == func4(a, x, b || false && func3());
    cout << y;
    cout << "\n";
    // Read and write
    cout << "Hello world!";
    cout << "\n";
    cout << 8;
    cout << "\n";
    cout << x;
    cout << "\n";
    cin >> a;
    cin >> b;
    // if, if else, and while
    if (true){
        x = 1;
    }
    if (1 > func1() + 2){
        y = func3();
    }
    else{
        cout << "Hi";
    }
    while(1 == func1() || y){
        b = 1 + 2 - func1() * 3 > x && false || !func3();
    }
}
void main(){
    int w;
    bool t;
    cout << func1();
    cout << "\n";
    x = 5;
    cout << x;
    cout << func2(x);
    cout << "\n";
    cout << func3();
    cout << "\n";
    y = false;
    cout << y;
    cout << "\n";
    cout << func4(func1(), x + func2(x + 5), y || func3());
    cout << "\n";
    func5();
    w = 2;
    w++;
    cout << w;
    w--;
    cout << w;
    cout << -w;
    cin >> w;
    cin >> t;
    cout << w;
    cout << t;
    cout << "h" == "hello";
    cout << "ee" == "ee";
    return;
    cout << "problem!";
}
